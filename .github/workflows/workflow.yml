name: DEPI Final Project

on:
  push:
  workflow_dispatch:

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: ${{ vars.AWS_REGION }}
  SSH_PRIVATE_KEY: ${{ secrets.SSH_PRV_KEY }}
  SSH_PUBLIC_KEY: ${{ secrets.SSH_PUB_KEY }}

jobs:
  Deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: download terraform
        uses: actions/download-artifact@v4
        with:
          path: .

      - name: Create Files for SSH keys
        run: |
             echo "${{ env.SSH_PRIVATE_KEY }}" > id_aws_ec2
             echo "${{ env.SSH_PUBLIC_KEY }}" > id_aws_ec2.pub

             mkdir ~/.ssh/
             cp ./id_aws_ec2 ./id_aws_ec2.pub ~/.ssh/
             
      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Install SSH & Ansible
        run: |
          sudo apt-get update && sudo apt-get install -y openssh-server ansible      

      - name: Terraform Init
        run: |
          terraform init
      
      - name: Terraform Apply (manual approval)
        run: |
          terraform apply -var="aws_access_key_id=${{ env.AWS_ACCESS_KEY_ID }}" \
                          -var="aws_secret_access_key=${{ env.AWS_SECRET_ACCESS_KEY }}" \
                          -var="key_name_value=${{ env.SSH_PUBLIC_KEY }}" \
                          -var="aws_region=${{ env.AWS_REGION }}" \
                          -auto-approve
          
          # Save the public IP to an environment variable
          export PUBLIC_IP=$(terraform output -raw public_ip)

          # Use the variable
          echo "The public IP is: $PUBLIC_IP"

      - name: upload terraform state                  
        uses: actions/upload-artifact@v4
        with:
          name: terraform-state
          path: terraform.tfstate

      - name: upload terraform state backup                
        uses: actions/upload-artifact@v4
        with:
          name: terraform-state-backup
          path: terraform.tfstate.backup

      # - name: Gather EC2 public IP
      #   run: |
      #       echo $(terraform output -raw public_ip) > public_ip.txt
      #       cat  public_ip.txt
      #       echo "public_ip = $(cat public_ip.txt)"
                  

      - name: Run Ansible playbook
        run: |
              cd ./ansible
              echo "[ec2_hosts]" > hosts
              echo "ec2_host ansible_host=$PUBLIC_IP" >> hosts
              cat hosts
              ansible-playbook -i hosts main.yml