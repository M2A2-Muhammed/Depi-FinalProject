name: DEPI Final Project

on:
  push:
  workflow_dispatch:

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  SSH_PRIVATE_KEY: ${{ secrets.SSH_PRV_KEY }}
  SSH_PUBLIC_KEY: ${{ secrets.SSH_PUB_KEY }}
  AWS_REGION: ${{ vars.AWS_REGION }}
  SSH_KEY_NAME: "github-actions-key"

jobs:
  Deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Cache Dependencies
        uses: actions/cache@v4
        with:
          path: /tmp/ssh_ansible
          key: ssh-ansible-${{ runner.os }}-${{ hashFiles('**/requirements.yml') }}
          restore-keys: |
            ssh-ansible-${{ runner.os }}-

      - name: Install SSH Client and Ansible
        run: |
          if [ ! -d "/tmp/ssh_ansible" ]; then
            sudo apt-get update
            sudo apt-get install -y openssh-client ansible
            mkdir -p /tmp/ssh_ansible
          else
            echo "SSH client and Ansible are already cached."
          fi

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0 # Specify your required version
          terraform_wrapper: false

      - name: Cache Terraform
        uses: actions/cache@v4
        with:
          path: ~/.terraform.d/plugin-cache
          key: terraform-${{ runner.os }}-${{ hashFiles('**/*.tf') }}
          restore-keys: |
            terraform-${{ runner.os }}-

      - name: Start SSH Agent
        run: |
          eval "$(ssh-agent -s)"
          echo "${{ env.SSH_PRIVATE_KEY }}" | tr -d '\r' | ssh-add -

      - name: Terraform process
        env:
          TF_VAR_aws_access_key_id: ${{ env.AWS_ACCESS_KEY_ID }}
          TF_VAR_aws_secret_access_key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          TF_VAR_aws_region: ${{ env.AWS_REGION }}
          TF_VAR_ssh_public_key: "${{ env.SSH_PUBLIC_KEY }}"
        run: |
          terraform init
          terraform validate
          terraform apply -auto-approve
          echo "INSTANCE_IP=$(terraform output -raw instance_ip)" >> $GITHUB_ENV
      
      - name: Check Network Connectivity
        run: |
            ping -c 4 ${{ env.INSTANCE_IP }}

      - name: Add Host to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ env.INSTANCE_IP }} > ~/.ssh/known_hosts

      - name: Run Ansible Playbook
        run: |
            cd ./ansible
            ansible-playbook -i "${{ env.INSTANCE_IP }}," main.yml --user=ubuntu

