name: DEPI Final Project

on:
  workflow_dispatch:
    branches:
      - main

env:
  aws_access_key_id: "${{ secrets.AWS_ACCESS_KEY_ID }}"
  aws_secret_access_key: "${{ secrets.AWS_SECRET_ACCESS_KEY }}"
  ssh_private_key_path: "~/.ssh/id_rsa"
  ssh_public_key_path: "~/.ssh/id_rsa.pub"

jobs:
  Initialize:
    runs-on: ubuntu-latest

    steps:
          - name: Checkout code
            uses: actions/checkout@v2

          - name: Install SSH
            run: sudo apt-get install openssh-server

          - name: Generate SSH key
            run: |
              ssh-keygen -t rsa -b 4096  -f ${{ ssh_private_key_path }}
              chmod 600 ${{ ssh_private_key_path }}
              export SSH_PRIVATE_PATH=${{ ssh_private_key_path }}

  Install-Terraform:   
    needs: [Initialize]
    steps:     
      - name: Install Terraform
        run: |
          curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo gpg --dearmor -o /usr/share/keyrings/hashicorp-archive-keyring.gpg
          echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
          sudo apt-get update && sudo apt-get install terraform
          terraform version

  Install-Ansible:
    needs: [Install-Terraform]
    steps:
      - name: Install Ansible
        run: |
          sudo apt-get update && sudo apt-get install ansible
          ansible --version
  
  Copy-Files:
    needs: [Install-Terraform, Install-Ansible]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Copy Terraform files
        run: |
          mkdir -p ~/terraform
          cp -r ./terraform ~/terraform

      - name: Copy Ansible files
        run: |
          mkdir -p ~/ansible
          cp -r ./ansible ~/ansible


  Terraform-Init:
    needs: [Copy-Files]
    steps:
      - name: Terraform Init  
        run: terraform init

  Terraform-Apply:
    needs: [Terraform-Init]
    steps:
      - name: Terraform Apply
        run: |
            terraform apply -var="aws_access_key_id=${{ env.aws_access_key_id }}" 
                            -var="aws_secret_access_key=${{ env.aws_secret_access_key }}" 
                            -var="key_path"="${{ env.ssh_public_key_path }}"
                            -auto-approve

  Save-Terraform-Outputs:
    needs: [Terraform-Apply]
    steps:
      - name: Save Terraform Outputs to Environment Variables
        run: |
          terraform output -json | jq -r '.ec2_info.value.user' > ec2_user.txt
          terraform output -json | jq -r '.ec2_info.value.public_ip' > ec2_public_ip.txt
          export EC2_USER=$(cat ec2_user.txt)
          export EC2_PUBLIC_IP=$(cat ec2_public_ip.txt)
          echo "EC2_USER=$EC2_USER"
          echo "EC2_PUBLIC_IP=$EC2_PUBLIC_IP"

  
